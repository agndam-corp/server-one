apiVersion: v1
kind: ConfigMap
metadata:
  name: adguard-home-scripts
data:
  backup-config.sh: |
    #!/bin/sh
    # Script to backup AdGuard Home configuration via API and push to git
    set -e

    # Configuration
    GIT_REPO="https://github.com/your-username/your-repo.git"
    GIT_BRANCH="main"
    CONFIG_FILE_PATH="apps/adguard-home/prd/configmap.backup"
    GIT_USERNAME="your-git-username"
    GIT_EMAIL="your-git-email@example.com"

    # Create temporary directory
    TEMP_DIR="/tmp/adguard-backup-$(date +%s)"
    mkdir -p $TEMP_DIR
    cd $TEMP_DIR

    # Wait for AdGuard Home to be ready
    until curl -s http://adguard-home.adguard-home.svc.cluster.local/control/status > /dev/null; do
      echo "Waiting for AdGuard Home to be ready..."
      sleep 5
    done

    # Get current configuration
    echo "Backing up AdGuard Home configuration..."
    curl -s http://adguard-home.adguard-home.svc.cluster.local/control/config > config.json

    # Clone the repository
    echo "Cloning repository..."
    git clone $GIT_REPO repo
    cd repo

    # Update the configuration file
    echo "Updating configuration file..."
    jq '.' ../config.json > $CONFIG_FILE_PATH

    # Check if there are changes
    if ! git diff --quiet $CONFIG_FILE_PATH; then
      echo "Configuration has changed, committing..."
      
      # Configure git
      git config user.name "$GIT_USERNAME"
      git config user.email "$GIT_EMAIL"
      
      # Add and commit changes
      git add $CONFIG_FILE_PATH
      git commit -m "Update AdGuard Home configuration $(date)"
      
      # Push changes using the token
      git remote set-url origin https://$GIT_USERNAME:$GIT_TOKEN@${GIT_REPO#https://}
      git push origin $GIT_BRANCH
      
      echo "Configuration backup completed and pushed to git"
    else
      echo "Configuration unchanged, no commit needed"
    fi

    # Clean up
    cd /
    rm -rf $TEMP_DIR

  apply-config.sh: |
    #!/bin/sh
    # Script to apply configuration to AdGuard Home via API from git
    set -e

    # Configuration
    GIT_REPO="https://github.com/your-username/your-repo.git"
    GIT_BRANCH="main"
    CONFIG_FILE_PATH="apps/adguard-home/prd/configmap.backup"

    # Create temporary directory
    TEMP_DIR="/tmp/adguard-apply-$(date +%s)"
    mkdir -p $TEMP_DIR
    cd $TEMP_DIR

    # Wait for AdGuard Home to be ready
    until curl -s http://adguard-home.adguard-home.svc.cluster.local/control/status > /dev/null; do
      echo "Waiting for AdGuard Home to be ready..."
      sleep 5
    done

    # Clone the repository
    echo "Cloning repository..."
    git clone $GIT_REPO repo
    cd repo

    # Checkout the specified branch
    git checkout $GIT_BRANCH

    # Check if configuration file exists
    if [ ! -f $CONFIG_FILE_PATH ]; then
      echo "Configuration file not found: $CONFIG_FILE_PATH"
      exit 1
    fi

    # Apply configuration via API
    echo "Applying AdGuard Home configuration..."
    curl -X POST \
      -H "Content-Type: application/json" \
      -d @$CONFIG_FILE_PATH \
      http://adguard-home.adguard-home.svc.cluster.local/control/config

    echo "Configuration applied successfully"

    # Clean up
    cd /
    rm -rf $TEMP_DIR