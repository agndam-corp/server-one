name: Publish cert-manager-webhook-spaceship Docker Image to GHCR

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'tools/cert-manager-webhook-spaceship/**'
      - '!tools/cert-manager-webhook-spaceship/deploy/cert-manager-webhook-spaceship/values.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tools/cert-manager-webhook-spaceship/**'
      - '!tools/cert-manager-webhook-spaceship/deploy/cert-manager-webhook-spaceship/values.yaml'
  workflow_dispatch: # allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: agndam-corp/cert-manager-webhook-spaceship

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ADMIN_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short,prefix=
          # Get the tag from the values.yaml file
          flavor: |
            latest=true

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: tools/cert-manager-webhook-spaceship
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ github.event_name != 'pull_request' }}

  update-helm-values:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    steps:
      - name: Get image tag
        id: image-tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ADMIN_TOKEN }}
          path: server-one

      - name: Update image tag in values.yaml
        run: |
          cd server-one/tools/cert-manager-webhook-spaceship/deploy/cert-manager-webhook-spaceship
          NEW_TAG="${{ steps.image-tag.outputs.tag }}"
          
          # Update the tag value for the image in the values.yaml using sed
          sed -i "s/tag: .*/tag: $NEW_TAG/" values.yaml

      - name: Commit and push changes
        run: |
          cd server-one
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tools/cert-manager-webhook-spaceship/deploy/cert-manager-webhook-spaceship/values.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            COMMIT_MSG="Update cert-manager-webhook-spaceship image tag to ${{ steps.image-tag.outputs.tag }}"
            git commit -m "$COMMIT_MSG"
            git push
          fi